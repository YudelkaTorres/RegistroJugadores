@page "/Jugador/Index"

@inject JugadoresService jugadoresService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Index de Jugadores</PageTitle>
<div class="card">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header text-center">
            <div class="bg-secondary rounded text-white">
                <h5 class="card-title">Index de Jugadores</h5>
            </div>
        </div>
        @*Body*@
        <div class="card-body">
            @*Labels*@
            <div class="row">
                @*Filtar por*@
                <div class="col-3">
                    <label class="form-label" for="Filtro"><strong>Filtrar por</strong></label>
                </div>
                @*ValorFiltro*@
                <div class="col-4">
                    <label class="col-form-label"><strong>B&uacute;squeda</strong></label>
                </div>
                @*Inputs y Buttons*@
                <div class="row align-items-center">
                    @*Filtro*@
                    <div class="col-3">
                        <InputSelect class="form-select" @bind-Value="Filtro">
                            <option value="" selected disabled>Elija una opci&oacute;n</option>
                            <option value="JugadorId">JugadorId</option>
                            <option value="Nombres">Nombres</option>
                        </InputSelect>
                    </div>
                @*Búsqueda*@
                    <div class="col-4">
                        <div class="input-group">
                            <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                            <button type="button" class="btn btn-outline-primary" @onclick="Buscar"> 
                                <i class="bi bi-search"></i> Buscar
                            </button>
                        </div>
                    </div>
                    <div class="col-md-4 text-end mt-4 mt-md-0">
                        <a href="/Jugador/Create" class="btn btn-success">
                            <i class="bi bi-plus-circle me-1"></i> Crear
                        </a>
                    </div>
                </div>
           
                @*Tabla*@
                <div class="text-center mt-3">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>JugadorId</th>
                                <th>Nombres</th>
                                <th>Partidas</th>
                                <th>Editar</th>
                                <th>Eliminar</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var jugador in ListaJugadores)
                            {
                                <tr>
                                    <td>@jugador.JugadorId</td>
                                    <td>@jugador.Nombres</td>
                                    <td>@jugador.Partidas</td>
                                    <td>
                                        <a href="/Jugador/Edit/@jugador.JugadorId" class="btn btn-outline-success btn-sm">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                    
                                     </td>
                                     <td>
                                        <button class="btn btn-outline-danger btn-sm" @onclick="() => ConfirmarEliminar (jugador.JugadorId)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @*Footer*@
            <div class="card-footer">
                <p>Total de Jugadores: @ListaJugadores.Count()</p>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Jugadores> ListaJugadores { get; set; } = new List<Jugadores>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;
    [Inject] public IJSRuntime JS { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (Filtro == "JugadorId" && int.TryParse(ValorFiltro, out int id))
            {
                ListaJugadores = await jugadoresService.Listar(j => j.JugadorId == id);
            }
            else if (Filtro == "Nombres")
            {
                ListaJugadores = await jugadoresService.Listar(j => j.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
            }
        }
        else
        {
            ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
        }
    }

    public void Crear()
    {
        Navigation.NavigateTo("/Jugador/Crate/");
    }

    private async Task ConfirmarEliminar(int jugadorId)
    {
        bool confirmado = await JS.InvokeAsync<bool>("confirm",
        $"¿Estás seguro que deseas eliminar al jugador con ID {jugadorId}?");

        if (confirmado)
        {
            await jugadoresService.Eliminar(jugadorId);
            ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
        }
    }

    public void Editar(int jugadorId)
    {
        Navigation.NavigateTo($"/Jugador/Edit/{jugadorId}");
    }
}
