@page "/Jugador/Create"
@using RegistroJugadores.Models
@using RegistroJugadores.Services
@inject JugadoresService JugadoresService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Index de Jugadores</PageTitle>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bd-white text-center">
            <h5 class="mb-0">Crear un nuevo jugador</h5>
        </div>
        <div class="card-body">
            <EditForm Model="Jugadores" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <div class="row">
                    @* JugadorId*@
                    <div class="col-md-6 mb-3">
                        <label class="form-label fw-bold">JugadorId:</label>
                        <InputNumber class="form-control" @bind-Value="Jugadores.JugadorId" readonly />
                    </div>

                    @*Nombres*@
                    <div class="col-md-6 mb-3">
                        <label for="Nombre" class="form-label fw-bold">Nombre:</label>
                        <InputText id="nombre" class="form-control" @bind-Value="Jugadores.Nombres" />
                        <ValidationMessage For="() => Jugadores.Nombres" />
                    </div>

                    @*Partidas*@
                    <div class="col-md-6 mb-3">
                        <label for="Partidas" class="form-label fw-bold">Partidas</label>
                        <InputNumber id="Partidas" class="form-control" @bind-Value="Jugadores.Victorias" />
                        <ValidationMessage For="() => Jugadores.Victorias" />
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2 mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-1"></i> Guardar
                    </button>
                    <a href="/Jugador/Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left-circle me-1"></i> Volver
                    </a>
                </div>
            </EditForm>

            @if (!string.IsNullOrWhiteSpace(Mensaje))
            {
                <div class="alert alert-warning mt-2">@Mensaje</div>
            }
        </div>
    </div>
</div>

@code {
    public Jugadores Jugadores { get; set; } = new();
    public string Mensaje { get; set; } = string.Empty;

    private async Task Guardar()
    {
        if (await JugadoresService.ExisteNombre(Jugadores.Nombres))
        {
            Mensaje = "Ya existe un jugador con este nombre.";
            return;
        }
        if (await JugadoresService.Guardar(Jugadores))
        {
            NavigationManager.NavigateTo("/Jugador/Index");
        }
    }
}